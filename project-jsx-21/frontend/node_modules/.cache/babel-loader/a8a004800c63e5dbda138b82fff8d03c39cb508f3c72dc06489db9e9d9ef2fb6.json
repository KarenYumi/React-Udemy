{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksilva\\\\Desktop\\\\React_Curso\\\\JavaScripts\\\\project-jsx-21\\\\frontend\\\\src\\\\pages\\\\EventDetailsPage.js\",\n  _s = $RefreshSig$();\nimport { redirect, useRouteLoaderData, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailsPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailsPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/` + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch details for selected event\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!'response.ok') {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/` + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not delete event\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["redirect","useRouteLoaderData","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/ksilva/Desktop/React_Curso/JavaScripts/project-jsx-21/frontend/src/pages/EventDetailsPage.js"],"sourcesContent":["import { redirect, useRouteLoaderData, defer, Await } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventDetailsPage() {\r\n  const { event, events } = useRouteLoaderData(\"event-detail\");\r\n\r\n  return (\r\n    <>\r\n      <Await resolve={event}>\r\n      {loadedEvent => <EventItem event={loadedEvent} />}\r\n      </Await>\r\n      <Await resolve={events}>\r\n        {loadedEvents => <EventsList events={loadedEvents} />}\r\n      </Await>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default EventDetailsPage;\r\n\r\nasync function loadEvent(id) {\r\n  const response = await fetch(`http://localhost:8080/events/` + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch details for selected event\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loadEvents() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!'response.ok') {\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  return defer({\r\n    event: loadEvent(id),\r\n    events: loadEvents(),\r\n  })\r\n\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n\r\n  const response = await fetch(`http://localhost:8080/events/` + eventId, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"Could not delete event\" }), {\r\n      status: 500,\r\n    });\r\n  }\r\n  return redirect(\"/events\");\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}